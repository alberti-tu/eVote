{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/RSALib.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/new-table/new-table.component.css","webpack:///./src/app/new-table/new-table.component.html","webpack:///./src/app/new-table/new-table.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/app/table/table.component.css","webpack:///./src/app/table/table.component.html","webpack:///./src/app/table/table.component.ts","webpack:///./src/app/user-table/user-table.component.css","webpack:///./src/app/user-table/user-table.component.html","webpack:///./src/app/user-table/user-table.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/NewTableReq.ts","webpack:///./src/models/Table.ts","webpack:///./src/models/publicKey.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import * as bigInt from 'big-integer';\nimport {BigInteger} from 'big-integer';\n\nexport function getPrime(length: number): BigInteger {\n    length = Math.round(length / 32);\n    let q = bigInt(4);\n    while (!q.isProbablePrime() || q.bitLength().toJSNumber() !== length * 32) {\n        const array = new Uint32Array(length);\n        const randomData = window.crypto.getRandomValues<Uint32Array>(array);\n        let number = '';\n        for (let x = 0; x < randomData.length; x++) {\n            number = number.concat(randomData[x].toString(16));\n        }\n        q = bigInt(number, 16);\n    }\n    return q;\n}\n\nexport function expConMod(base: BigInteger, exp: BigInteger, mod: BigInteger): BigInteger {\n    return base.modPow(exp, mod);\n}\n\nexport class PublicKey {\n    mod: BigInteger;\n    keyNumber: BigInteger;\n\n    encrypt(message: BigInteger): BigInteger {\n        return expConMod(message, this.keyNumber, this.mod);\n    }\n\n    verify(message: BigInteger): BigInteger {\n        return expConMod(message, this.keyNumber, this.mod);\n    }\n}\n\nexport class PrivateKey {\n    mod: BigInteger;\n    keyNumber: BigInteger;\n    publicKey: PublicKey;\n    phi: BigInteger;\n\n    decrypt(message: BigInteger): BigInteger {\n        return expConMod(message, this.keyNumber, this.mod);\n    }\n\n    sign(message: BigInteger): BigInteger {\n        return expConMod(message, this.keyNumber, this.mod);\n    }\n}\n\nexport function generateKeys(length: number): PrivateKey {\n    const result = new PrivateKey();\n    let p = getPrime(length / 2);\n    let q = getPrime(length / 2);\n    let phi = p.subtract(1).multiply(q.subtract(1));\n    let n = p.multiply(q);\n    while ( p === q || n.bitLength().toJSNumber() !== length || phi.bitLength().toJSNumber() !== length) {\n        p = getPrime(length / 2);\n        q = getPrime(length / 2);\n        phi = p.subtract(1).multiply(q.subtract(1));\n        n = p.multiply(q);\n    }\n    const publicKeyNum = bigInt('65537');\n    result.keyNumber = publicKeyNum.modInv(phi);\n    result.mod = n;\n    result.phi = phi;\n    result.publicKey = new PublicKey();\n    result.publicKey.mod = n;\n    result.publicKey.keyNumber = publicKeyNum;\n    console.log(result);\n    return result;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <button (click)=\\\"showNewTableComp()\\\">New Table</button>\\n  <app-new-table *ngIf=\\\"newTableCompBool\\\" (addedTable)=\\\"addedTable()\\\" [tables]=\\\"tables\\\"></app-new-table>\\n  <div>\\n    <h2>Tables</h2>\\n    <button (click)=\\\"updateTables()\\\">Update</button>\\n    <div *ngFor=\\\"let table of tables;let i = index\\\" (click)=\\\"selectTable(i)\\\">\\n      <h4 *ngIf=\\\"selectedTableIndex!==i\\\">{{table.tableId}}</h4>\\n      <app-table [table]=\\\"table\\\" *ngIf=\\\"selectedTableIndex===i\\\"></app-table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport Table from '../../models/Table';\nimport { RestService } from '../rest.service';\nimport { restoreView } from '@angular/core/src/render3';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private rest: RestService) {\n    this.tables = [];\n    this.newTableCompBool = false;\n    this.selectedTableIndex = -1;\n  }\n  newTableCompBool: boolean;\n  tables: Table[];\n  selectedTableIndex: number;\n\n  showNewTableComp() {\n    this.newTableCompBool = !this.newTableCompBool;\n  }\n\n  updateTables() {\n    this.rest.getTables().subscribe((tables) => {\n      this.tables = tables;\n      console.log(this.tables);\n    });\n  }\n\n  selectTable(index: number) {\n    this.selectedTableIndex = index;\n  }\n\n  addedTable() {\n    this.newTableCompBool = false;\n    this.updateTables();\n  }\n\n  stateToString(state: number): string {\n    switch (state) {\n      case 0:\n      return 'init';\n\n      case 1:\n      return 'split key';\n\n      case 2:\n      return 'shareKey';\n\n      case 3:\n      return 'all parts populated';\n\n      case 4:\n      return 'voting';\n\n      case 5:\n      return 'recovering parts';\n\n      case 6:\n      return 'recovered needed parts';\n\n      case 7:\n      return 'recovered key';\n\n      case 8:\n      return 'calculated results';\n    }\n  }\n\n  ngOnInit() {\n    this.updateTables();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { UserComponent } from './user/user.component';\n\nconst routes: Routes = [\n  { path: 'admin', component: AdminComponent },\n  { path: 'user', component: UserComponent },\n  { path: '', redirectTo: '/user', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<h1>EVote Ballet Box</h1>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'urna';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { NewTableComponent } from './new-table/new-table.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RestService } from './rest.service';\nimport { TableComponent } from './table/table.component';\nimport { UserComponent } from './user/user.component';\nimport { UserTableComponent } from './user-table/user-table.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    NewTableComponent,\n    TableComponent,\n    UserComponent,\n    UserTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  entryComponents: [\n    AdminComponent\n  ],\n  providers: [RestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy10YWJsZS9uZXctdGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <h3>New Table</h3>\\n  <h4>TableId</h4>\\n  <input type=\\\"text\\\" id=\\\"tableId\\\" [(ngModel)]=\\\"table.tableId\\\"><br><br>\\n  <h4>Candidates</h4>\\n  number <input type=\\\"number\\\" step=\\\"1\\\" min=\\\"0\\\" id=\\\"tableId\\\" [(ngModel)]=\\\"table.candidates.length\\\"><br>\\n  <div *ngFor=\\\"let candidate of table.candidates;let i = index\\\">\\n      candidate {{i}}<input  type=\\\"text\\\" id=\\\"tableId\\\" [(ngModel)]=\\\"candidate\\\" (change)=\\\"setCandidate(candidate,i)\\\"><br>\\n  </div>\\n  <h4>Elections Key</h4>\\n  <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"loadElectionKey($event)\\\"><br><br>\\n  <button (click)=\\\"sendTable()\\\">Send</button>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport Table from '../../models/Table';\nimport PublicKey from 'src/models/publicKey';\nimport { RestService } from '../rest.service';\nimport {NewTableReq, ElectionsKey} from '../../models/NewTableReq';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-new-table',\n  templateUrl: './new-table.component.html',\n  styleUrls: ['./new-table.component.css']\n})\nexport class NewTableComponent implements OnInit {\n\n  @Input() tables: Table[];\n  @Output() addedTable = new EventEmitter<void>();\n  table: Table;\n\n  constructor(private rest: RestService, private toastr: ToastrService) {\n    this.table = new Table();\n  }\n\n  ngOnInit() {\n  }\n\n  setCandidate(candidate: string, i: number) {\n    this.table.candidates[i] = candidate;\n  }\n\n  loadElectionKey(evt) {\n    const files = <FileList>evt.target.files;\n    if (files[0]) {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        console.log(reader.result);\n        const publicKey = JSON.parse(<string>reader.result) as PublicKey;\n        this.table.publicKey = publicKey;\n      }.bind(this);\n      reader.readAsText(files[0]);\n    }\n  }\n\n  sendTable() {\n    const reqNewTable = new NewTableReq();\n    reqNewTable.candidates = this.table.candidates;\n    reqNewTable.electionsKey = new ElectionsKey();\n    reqNewTable.electionsKey.keyNumber = this.table.publicKey.keyNumber;\n    reqNewTable.electionsKey.mod = this.table.publicKey.mod;\n    reqNewTable.tableId = this.table.tableId;\n    this.rest.newTable(reqNewTable).subscribe((res) => {\n      this.toastr.info('Added new table', 'Succes!');\n      this.addedTable.next();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops!');\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport Table from 'src/models/Table';\nimport Response from '../models/Response';\nimport { HttpClient} from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { NewTableReq } from 'src/models/NewTableReq';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  constructor(private http: HttpClient) { }\n\n  getTables (): Observable<Table[]> {\n    return this.http.get<Table[]>(environment.urlBackEnd + '/user/tables');\n  }\n\n  newTable (tableReq: NewTableReq): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/newTable', tableReq);\n  }\n\n  splitKey(tableId: string, parts: number, threshold: number): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/split', {\n      parts,\n      threshold\n    });\n  }\n\n  getPart(tableId: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/popPart', {\n    });\n  }\n\n  startVoting(tableId: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/startVote', {\n    });\n  }\n\n  stopVoting(tableId: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/stopVote', {\n    });\n  }\n\n  pushPart(tableId: string, part: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/pushPart', {\n      part\n    });\n  }\n\n  recoverKey(tableId: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/recoverKey', {\n    });\n  }\n\n  results(tableId: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/result', {\n    });\n  }\n\n  getTable(tableId: string): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/admin/' + tableId + '/tableInfo', {\n    });\n  }\n\n  addVote(tableId: string, vote: string, firmVote: string, identity: string, firmIdentity): Observable<Response> {\n    return this.http.post<Response>(environment.urlBackEnd + '/user/' + tableId, {\n      vote,\n      firmVote,\n      identity,\n      firmIdentity\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlL3RhYmxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <h4>{{table.tableId}}</h4>\\n  <li *ngFor=\\\"let candidate of table.candidates\\\">{{candidate}}</li>\\n  state:{{stateToString(table.state)}}\\n  <div *ngIf=\\\"table.state===0\\\">\\n    <h5>Split Menu</h5>\\n    parts: <input type=\\\"number\\\" placeholder=\\\"parts\\\" step=\\\"1\\\" min=\\\"2\\\" [(ngModel)]=\\\"parts\\\"><br>\\n    threshold: <input type=\\\"number\\\" step=\\\"1\\\" min=\\\"2\\\" [(ngModel)]=\\\"threshold\\\"><br>\\n    <button (click)=\\\"splitKey()\\\">Split Private Table Key</button>\\n  </div>\\n  <div *ngIf=\\\"table.state===1||table.state===2\\\">\\n    <h5>Private Key Part Menu</h5>\\n    <button (click)=\\\"getKeyPart()\\\">Get Private Key Part</button>\\n  </div>\\n  <div *ngIf=\\\"table.state===3\\\">\\n    <h5>Voting Menu</h5>\\n    <button (click)=\\\"startVoting()\\\">Start Voting</button>\\n  </div>\\n  <div *ngIf=\\\"table.state===4\\\">\\n    <h5>Voting Menu</h5>\\n    <button (click)=\\\"stopVoting()\\\">Stop Voting</button>\\n  </div>\\n  <div *ngIf=\\\"table.state===5\\\">\\n    <h5>Private Key Part Menu</h5>\\n    <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"loadPart($event)\\\"><br>\\n    <button (click)=\\\"pushPart()\\\">Push Private Key Part</button>\\n  </div>\\n  <div *ngIf=\\\"table.state===6\\\">\\n    <h5>Private Key Part Menu</h5>\\n    <button (click)=\\\"recoverKey()\\\">Recover Key</button>\\n  </div>\\n  <div *ngIf=\\\"table.state===7||table.state===8\\\">\\n    <h5>Results</h5>\\n    <button (click)=\\\"getResult()\\\">Results</button>\\n    <li *ngFor=\\\"let result of results;let i = index\\\">{{table.candidates[i]}}: {{result}} </li>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport Table from 'src/models/Table';\nimport { RestService } from '../rest.service';\nimport {saveAs} from 'file-saver';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor(private rest: RestService, private toastr: ToastrService) {\n    this.parts = 2;\n    this.threshold = 2;\n    this.results = [];\n   }\n\n  @Input() table: Table;\n\n  parts: number;\n  threshold: number;\n  part: string;\n  results: number[];\n\n  loadPart(evt) {\n    const files = <FileList>evt.target.files;\n    if (files[0]) {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        console.log(reader.result);\n        this.part = <string>reader.result;\n      }.bind(this);\n      reader.readAsText(files[0]);\n    }\n  }\n\n  getResult() {\n    this.rest.results(this.table.tableId).subscribe((resp) => {\n      this.results = resp.results;\n      this.toastr.success('The results are calculated', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  recoverKey() {\n    this.rest.recoverKey(this.table.tableId).subscribe((resp) => {\n      this.toastr.success('The key is recovered', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  pushPart() {\n    this.rest.pushPart(this.table.tableId, this.part).subscribe((resp) => {\n      this.toastr.success('Pushed a private key part', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  splitKey() {\n    this.rest.splitKey(this.table.tableId, this.parts, this.threshold).subscribe((resp) => {\n      this.toastr.success('Split the private table Key', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  getKeyPart() {\n    this.rest.getPart(this.table.tableId).subscribe((resp) => {\n      const blob = new Blob([resp.part], { type: 'plain/text', endings: 'transparent'});\n      saveAs(blob, 'part.txt');\n      this.toastr.success('Get a private key part', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  startVoting() {\n    this.rest.startVoting(this.table.tableId).subscribe((resp) => {\n      this.toastr.success('The voting is started', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  stopVoting() {\n    this.rest.stopVoting(this.table.tableId).subscribe((resp) => {\n      this.toastr.success('The voting is stop', 'Succes!');\n      this.updateTable();\n    }, (err) => {\n      this.toastr.error('It have some problem', 'Ooops');\n    });\n  }\n\n  updateTable() {\n    this.rest.getTable(this.table.tableId).subscribe((resp) => {\n      this.table.state = resp.state;\n    });\n  }\n\n  stateToString(state: number): string {\n    switch (state) {\n      case 0:\n      return 'init';\n\n      case 1:\n      return 'split key';\n\n      case 2:\n      return 'shareKey';\n\n      case 3:\n      return 'all parts populated';\n\n      case 4:\n      return 'voting';\n\n      case 5:\n      return 'recovering parts';\n\n      case 6:\n      return 'recovered needed parts';\n\n      case 7:\n      return 'recovered key';\n\n      case 8:\n      return 'calculated results';\n    }\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItdGFibGUvdXNlci10YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <h4>{{table.tableId}}</h4>\\n  <div *ngFor=\\\"let candidate of table.candidates;let i = index\\\">\\n    <input type=\\\"radio\\\" name=\\\"group1\\\" value=\\\"{{i}}\\\" (click)=\\\"selectCandidate(i)\\\"> {{candidate}}\\n  </div>\\n  <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"loadCertificate($event)\\\"><br>\\n  <button (click)=\\\"sendVote()\\\">Send Vote</button>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport Table from 'src/models/Table';\nimport { RestService } from '../rest.service';\nimport { Certificate } from '../../models/Certifiate';\nimport * as RSA from '../../RSALib';\nimport * as bigInt from 'big-integer';\nimport {Buffer} from 'buffer';\nimport * as hash from 'hash.js';\n\n@Component({\n  selector: 'app-user-table',\n  templateUrl: './user-table.component.html',\n  styleUrls: ['./user-table.component.css']\n})\nexport class UserTableComponent implements OnInit {\n\n  constructor(private rest: RestService) { }\n\n  @Input() table: Table;\n  certificate: Certificate;\n  selectedCandidate: number;\n\n  ngOnInit() {\n  }\n\n  loadCertificate(evt) {\n    const files = <FileList>evt.target.files;\n    if (files[0]) {\n      const reader = new FileReader();\n      reader.onload = function(event) {\n        console.log(reader.result);\n        this.certificate = <Certificate>JSON.parse(<string>reader.result);\n      }.bind(this);\n      reader.readAsText(files[0]);\n    }\n  }\n\n  sendVote() {\n    let vote = '';\n    for (let x = 0; x < this.table.candidates.length; x++) {\n      if ( x === this.selectedCandidate) {\n        vote += '1';\n      } else {\n        vote += '0';\n      }\n      if (x !== this.table.candidates.length - 1) {\n        vote += ';';\n      }\n    }\n\n    const tableKey = new RSA.PublicKey();\n    tableKey.keyNumber = bigInt(this.table.publicKey.keyNumber, 16);\n    tableKey.mod = bigInt(this.table.publicKey.mod, 16);\n    vote = tableKey.encrypt(bigInt(Buffer.from(vote).toString('hex'), 16)).toString(16);\n\n    const privateIdentityKey = new RSA.PrivateKey();\n    privateIdentityKey.keyNumber = bigInt(this.certificate.privateIdentity.split('.')[0], 16);\n    privateIdentityKey.mod = bigInt(this.certificate.privateIdentity.split('.')[1], 16);\n\n    const firmVote = privateIdentityKey.sign(bigInt(hash.sha256().update(vote).digest('hex'), 16)).toString(16);\n    const identity = this.certificate.publicIdentity;\n    const firmIdentity = this.certificate.firmIdentity;\n    this.rest.addVote(this.table.tableId, vote, firmVote, identity, firmIdentity).subscribe((resp) => {\n\n    });\n  }\n\n  selectCandidate(index: number) {\n    console.log(index);\n    this.selectedCandidate = index;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <h2>Tables</h2>\\n  <div *ngFor=\\\"let table of tables;let i = index\\\" (click)=\\\"selectTable(i)\\\">\\n      <h4 *ngIf=\\\"selectedTableIndex!==i\\\">{{table.tableId}}</h4>\\n      <app-user-table [table]=\\\"table\\\" *ngIf=\\\"selectedTableIndex===i\\\"></app-user-table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport Table from 'src/models/Table';\nimport { RestService } from '../rest.service';\nimport PublicKey from 'src/models/publicKey';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private rest: RestService) {\n    this.tables = [];\n  }\n\n  tables: Table[];\n  selectedTableIndex: number;\n\n  updateTables() {\n    this.rest.getTables().subscribe((tables) => {\n      for (let x = 0; x < tables.length; x++) {\n        if (tables[x].state === 4) {\n          this.rest.getTable(tables[x].tableId).subscribe((table) => {\n            tables[x].publicKey = new PublicKey();\n            tables[x].publicKey.keyNumber = table.publicKey;\n            tables[x].publicKey.mod = table.publicKeyMod;\n            this.tables.push(tables[x]);\n          });\n        }\n      }\n      console.log(this.tables);\n    });\n  }\n\n  selectTable(index: number) {\n    this.selectedTableIndex = index;\n  }\n\n  ngOnInit() {\n    this.updateTables();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  urlBackEnd: 'https://localhost:8080',\n  urlFrontend: 'http://localhost:4200',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class NewTableReq {\n    electionsKey: ElectionsKey;\n    candidates: string[];\n    tableId: string;\n}\n\nexport class ElectionsKey {\n    keyNumber: string;\n    mod: string;\n}\n","import PublicKey from './publicKey';\n\nexport default class Table {\n    constructor() {\n        this.candidates = [];\n    }\n    publicKey: PublicKey;\n    tableId: string;\n    state: number;\n    candidates: string[];\n}\n","export default class PublicKey {\n    keyNumber: string;\n    mod: string;\n}\n"],"sourceRoot":""}